#!/bin/bash
source /etc/profile.d/instruqt-env.sh
source /root/.bashrc
/bin/set-workdir /root/hashicat-aws
cd /root/hashicat-aws

# The idea here was to pass these in from CircleCI
# ORG="${TFC_ORG:-instruqt-hashicat-aws-$RANDOM}"
# TOKEN="${TFC_TOKEN:-REPLACETHISWITHYOURTOKEN}"

# Hacky fix until instruqt allows us to pass these in from CircleCI
ORG="instruqt-testing"
TOKEN=$(cat /tmp/tfc_user_token)

# Configure the /root/.terraformrc file
echo "Configuring the .terraformrc file..."
cat <<-EOF > /root/.terraformrc
credentials "app.terraform.io" {
    token = "$TOKEN"
}
EOF

# Configure the remote_backend.tf file
echo "Configuring the remote backend file..."
cat <<-EOF > /root/hashicat-aws/remote_backend.tf
terraform {
  backend "remote" {
    hostname = "app.terraform.io"
    organization = "$ORG"
    workspaces {
      name = "hashicat-aws"
    }
  }
}
EOF

# Create a workspace payload
echo "Creating a workspace JSON payload..."
cat <<-EOF > /tmp/create_workspace.json
{
  "data": {
    "attributes": {
      "name": "hashicat-aws"
    },
    "type": "workspaces",
    "attributes": {
      "operations": False
    }
  }
}
EOF

# Create a workspace
echo "Creating the hashicat-aws workspace in organization $ORG..."
curl --header "Authorization: Bearer $TOKEN" --header "Content-Type: application/vnd.api+json" --request POST --data @/tmp/create_workspace.json https://app.terraform.io/api/v2/organizations/$ORG/workspaces

# Run terraform init and apply
terraform init
terraform apply -auto-approve