#!/bin/bash
source /etc/profile.d/instruqt-env.sh
source /root/.bashrc
/bin/set-workdir /root/hashicat-azure

# Get our TFC token and organization from the local config files
TOKEN=$(grep token /root/.terraformrc | cut -d '"' -f2)
ORG=$(grep organization /root/hashicat-azure/remote_backend.tf | cut -d '"' -f2)
WORKSPACE_ID=$(curl -s --header "Authorization: Bearer $TOKEN"   --header "Content-Type: application/vnd.api+json"   https://app.terraform.io/api/v2/organizations/$ORG/workspaces/hashicat-azure | jq -r .data.id)

# Update the workspace with VCS settings
echo "Creating a workspace JSON payload..."
cat <<-EOF > /tmp/add_vcs.json
{
  "data": {
    "attributes": {
      "name": "hashicat-azure",
      "operations": true,
      "auto-apply": true,
      "vcs-repo": {
        "branch": "",
        "ingress-submodules": false,
        "identifier": "scarolan/hashicat-azure",
        "display-identifier": "scarolan/hashicat-azure",
        "oauth-token-id": "ot-Kvxk1Cc4VRWPjzG3"
        }
    },
    "type": "workspaces"
  }
}
EOF

# Update the workspace to enable VCS
curl --header "Authorization: Bearer $TOKEN" --header "Content-Type: application/vnd.api+json" --request PATCH --data @/tmp/add_vcs.json https://app.terraform.io/api/v2/organizations/$ORG/workspaces/hashicat-azure

# Trigger a terraform apply to update the infrastructure
cat <<-EOF > /tmp/create_run.json
{
  "data": {
    "attributes": {
      "is-destroy":false,
      "message": "Make it so."
    },
    "type":"runs",
    "relationships": {
      "workspace": {
        "data": {
          "type": "workspaces",
          "id": "$WORKSPACE_ID"
        }
      }
    }
  }
}
EOF

# Do the run
curl --header "Authorization: Bearer $TOKEN" --header "Content-Type: application/vnd.api+json" --request POST --data @/tmp/create_run.json https://app.terraform.io/api/v2/runs